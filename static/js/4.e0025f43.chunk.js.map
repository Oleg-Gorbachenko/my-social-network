{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","hoc/WithAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx"],"names":["module","exports","DialogItem","props","className","classes","dialog","active","to","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","mapStateToPropsForRedirect","state","isAuth","auth","Component","compose","connect","dialogsPage","dispatch","onSendMessage","newMessageText","addMessage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","values","restProps"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCItMC,EAAa,SAACC,GACvB,OACI,yBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAC3C,kBAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,IAAKN,EAAMO,QCH3CC,EAAU,SAACR,GACpB,OACI,yBAAKC,UAAWC,IAAQO,SAAUT,EAAMS,U,iCCD1CC,EAAcC,YAAiB,IAexBC,EAAsBC,YAA8B,CAACC,KAAM,wBAArCD,EAb4C,SAACb,GAC5E,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXZ,KAAK,iBACLa,YAAY,qBACZC,SAAU,CAACC,IAAUZ,KAE5B,mD,2CCRNa,EAA6B,SAACC,GAAD,MAAwD,CACvFC,OAAQD,EAAME,KAAKD,SCQvB,IDLoCE,ECmBrBC,sBAAQC,aAdC,SAACL,GACrB,MAAO,CACHM,YAAaN,EAAMM,gBAIA,SAACC,GACxB,MAAO,CACHC,cAAe,SAACC,GACZF,EAASG,YAAWD,SAKjBL,EDnBqBD,EEDb,SAAC3B,GAEpB,IAAMmC,EAAkBnC,EAAM8B,YAAYM,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYC,IAAKD,EAAEhC,GACPC,KAAM+B,EAAE/B,KACRD,GAAIgC,EAAEhC,QACvEkC,EAAmBxC,EAAM8B,YAAYW,SAASJ,KAAI,SAACK,GAAD,OAAO,kBAAC,EAAD,CAASH,IAAKG,EAAEpC,GACPG,QAASiC,EAAEjC,QACXH,GAAIoC,EAAEpC,QAO9E,OACI,yBAAKL,UAAWC,IAAQkC,SACpB,yBAAKnC,UAAWC,IAAQyC,cACnBR,GAEL,yBAAKlC,UAAWC,IAAQuC,UACnBD,GAEL,kBAAC5B,EAAD,CAAqBG,SAbP,SAAC6B,GACnB5C,EAAMgC,cAAcY,EAAOX,qBFFMJ,YAAQN,EAARM,EANX,SAAC7B,GACvB,IAAKyB,EAAwBzB,EAAxByB,OAAWoB,EAAhB,YAA6B7C,EAA7B,GACA,OAAKyB,EACE,kBAACE,EAAckB,GADF,kBAAC,IAAD,CAAUxC,GAAI","file":"static/js/4.e0025f43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Lv2g\",\"dialogsItems\":\"Dialogs_dialogsItems__10Yma\",\"active\":\"Dialogs_active__3iX4t\",\"dialog\":\"Dialogs_dialog__15gyS\",\"messages\":\"Dialogs_messages__15pYv\",\"message\":\"Dialogs_message__1E_Cd\"};","import classes from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {DialogType} from \"../../../redux/dialogs-reducer\";\r\n\r\nexport const DialogItem = (props: DialogType) => {\r\n    return (\r\n        <div className={classes.dialog + \" \" + classes.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}","import classes from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\nimport {MessageType} from \"../../../redux/dialogs-reducer\";\r\n\r\n\r\nexport const Message = (props: MessageType) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {AddMessageFormType} from \"../Dialogs\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nexport const AddMessageForm: React.FC<InjectedFormProps<AddMessageFormType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea}\r\n                   name='newMessageText'\r\n                   placeholder='Enter your message'\r\n                   validate={[required, maxLength50]}\r\n            />\r\n            <button>add message</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport const AddMessageReduxForm = reduxForm<AddMessageFormType>({form: 'dialogAddMessageForm'})(AddMessageForm)","import React, {Component, ComponentType} from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStatePropsForRedirectType = {\r\n    isAuth: boolean\r\n}\r\nconst mapStateToPropsForRedirect = (state: AppStateType): MapStatePropsForRedirectType => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport function WithAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: any) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Navigate to={\"/login\"}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {addMessage, InitialStateType} from \"../../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: InitialStateType\r\n}\r\ntype MapDispatchPropsType = {\r\n    onSendMessage: (newMessageText:string) => void\r\n}\r\n\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        onSendMessage: (newMessageText:string) => {\r\n            dispatch(addMessage(newMessageText))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(WithAuthRedirect(Dialogs))","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {AddMessageReduxForm} from \"./AddMessageForm/AddMessageForm\";\r\n\r\nexport type AddMessageFormType = {\r\n    newMessageText: string\r\n}\r\n\r\nexport const Dialogs = (props: DialogsPropsType) => {\r\n\r\n    const dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem key={d.id}\r\n                                                                           name={d.name}\r\n                                                                           id={d.id}/>)\r\n    const messagesElements = props.dialogsPage.messages.map((m) => <Message key={m.id}\r\n                                                                            message={m.message}\r\n                                                                            id={m.id}/>)\r\n\r\n    const addNewMessage = (values: AddMessageFormType) => {\r\n        props.onSendMessage(values.newMessageText)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}